with source as (
    select
        addressId as client_id,
        aa ->> '$.allowanceArray.id' as allowance_id,
        aa ->> '$.allowanceArray.error' as allowance_error,
        aa ->> '$.allowanceArray.height' as height,
        aa ->> '$.allowanceArray.msgCID' as message_cid,
        aa ->> '$.allowanceArray.retries' as retries,
        aa ->> '$.allowanceArray.allowance' as allowance,
        aa ->> '$.allowanceArray.auditTrail' as audit_trail,
        aa ->> '$.allowanceArray.allowanceTTD' as allowance_ttd,
        aa ->> '$.allowanceArray.isDataPublic' as is_data_public,
        aa ->> '$.allowanceArray.issueCreator' as issue_creator,
        aa ->> '$.allowanceArray.providerList' as provider_list,
        aa ->> '$.allowanceArray.usedAllowance' as used_allowance,
        aa ->> '$.allowanceArray.isLdnAllowance' as is_ldn_allowance,
        aa ->> '$.allowanceArray.isEFilAllowance' as is_efil_allowance,
        aa ->> '$.allowanceArray.verifierAddressId' as allocator_id,
        aa ->> '$.allowanceArray.isFromAutoverifier' as is_from_autoverifier,
        aa ->> '$.allowanceArray.retrievalFrequency' as retrieval_frequency,
        aa ->> '$.allowanceArray.searchedByProposal' as searched_by_proposal,
        aa ->> '$.allowanceArray.issueCreateTimestamp' as issue_create_timestamp,
        aa ->> '$.allowanceArray.hasRemainingAllowance' as has_remaining_allowance,
        aa ->> '$.allowanceArray.createMessageTimestamp' as create_message_timestamp,
    from {{ source("raw_assets", "raw_datacapstats_verified_clients") }}, unnest(allowanceArray) as aa
)

select
    allowance_id::numeric as allowance_id,
    client_id,
    allowance_error,
    if(nullif(allowance_error, '') is null, true, false) as is_valid,
    height::numeric as height,
    to_timestamp(height::numeric * 30 + 1598306400)::timestamp as height_at,
    message_cid,
    retries,
    allowance::bigint as allowance_bytes,
    allowance::bigint / power(1024, 4) as allowance_tibs,
    audit_trail,
    allowance_ttd::numeric as allowance_ttd,
    if(is_data_public = 'yes', true, false) as is_data_public,
    issue_creator,
    provider_list,
    used_allowance::bigint as used_allowance,
    is_ldn_allowance,
    is_efil_allowance,
    allocator_id,
    is_from_autoverifier,
    retrieval_frequency,
    searched_by_proposal,
    to_timestamp(issue_create_timestamp::numeric) as issue_created_at,
    has_remaining_allowance,
    to_timestamp(create_message_timestamp::numeric) as messaged_created_at
from source
order by height desc
